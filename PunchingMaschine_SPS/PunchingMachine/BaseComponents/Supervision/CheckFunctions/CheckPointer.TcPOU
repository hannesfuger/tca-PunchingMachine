<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.9">
  <POU Name="CheckPointer" Id="{10f1aac9-42f1-4e35-b832-09a7da2bf9a3}" SpecialFunc="None">
    <Declaration><![CDATA[/// Implicitly generated code : DO NOT EDIT!!!
/// checks for correct pointer use. Currently, this only detects null pointer, which are replaced by 
/// a pointer to a dummy area and reported as error
{attribute 'check_pointer' := ''}
{attribute 'no_check' := ''}
FUNCTION CheckPointer : POINTER TO BYTE
VAR_INPUT
	/// Destination address of the pointer
	ptToTest: POINTER TO BYTE;
	/// Size of the type the pointer points to. (e.g: 20 for POINTER TO ARRAY [0..9] OF INT) 
	iSize: DINT;
	/// Granularity of the pointer access. This is the size of the biggest non-structured data type in the type the pointer points to. (e.g: 2 for POINTER TO ARRAY [0..9] OF INT)
	iGran: DINT;
	/// Indicates read or write Access. TRUE = write access.
	bWrite: BOOL;
END_VAR

VAR_STAT
	aDummyData						: ARRAY[0..1023] OF BYTE;	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// check for outside address range
IF ptToTest = 0 THEN
	// report error 
	GVL_Supervision.aCodeErr[eCodeError_pointer] := TRUE;
	// this is just a desparate way to keep the PLC from crashing, 
	// probably there's a better solution
	CheckPointer := ADR( aDummyData ); 
END_IF]]></ST>
    </Implementation>
    <LineIds Name="CheckPointer">
      <LineId Id="3" Count="6" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>