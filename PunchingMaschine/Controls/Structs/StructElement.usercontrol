<div id="Element_1" data-tchmi-user-control="" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControl" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="870" data-tchmi-height="225" data-tchmi-width-unit="px" data-tchmi-height-unit="px" data-tchmi-left-unit="px" data-tchmi-top-unit="px">


    

<div id="TcHmiContainer" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height="200" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="380" data-tchmi-width-unit="px" data-tchmi-is-enabled="%pp%stElement::bActive%/pp%">

<div id="Element_X_Pos_var_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextbox" data-tchmi-textbox="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="170" data-tchmi-left-unit="px" data-tchmi-text="%f%GaugeValueFormatter(%pp%stElement::fX_Pos%/pp%,%i%maxDecimals%/i%).toString().replace(&quot;.&quot;, &quot;,&quot;)%/f%" data-tchmi-top="70" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-is-enabled="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-font-size="18" data-tchmi-auto-focus-out="True">
        <script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}</script>


        <script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "Element_X_Pos_var_2.onUserInteractionFinished",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%Element_X_Pos_var_2::Text%/ctrl%",
        "valueType": "tchmi:general#/definitions/String",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "%ctrl%Element_X_Pos_var_2::Text%/ctrl%.replace(',','.')"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::fX_Pos%/pp%",
        "valueType": "tchmi:general#/definitions/REAL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "GaugeValueFormatter(%ctrl%Element_X_Pos_var_2::Text%/ctrl%, %i%maxDecimals%/i%)"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
    









</div>

<div id="Element_Y_Pos_var_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextbox" data-tchmi-textbox="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="170" data-tchmi-left-unit="px" data-tchmi-text="%f%GaugeValueFormatter(%pp%stElement::fY_Pos%/pp%,%i%maxDecimals%/i%).toString().replace(&quot;.&quot;, &quot;,&quot;)%/f%" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-auto-focus-out="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-font-size="18" data-tchmi-is-enabled="%f%!%pp%stElement::bMirroring%/pp%%/f%" data-tchmi-tooltip="">
        <script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}</script>


        <script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "Element_Y_Pos_var_2.onUserInteractionFinished",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%Element_Y_Pos_var_2::Text%/ctrl%",
        "valueType": "tchmi:general#/definitions/String",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "%ctrl%Element_Y_Pos_var_2::Text%/ctrl%.replace(',','.')"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::fY_Pos%/pp%",
        "valueType": "tchmi:general#/definitions/REAL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "GaugeValueFormatter(%ctrl%Element_Y_Pos_var_2::Text%/ctrl%, %i%maxDecimals%/i%)"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
    </div>
<div id="TcHmiToggleButton_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/origin_top_left-24px.svg" data-tchmi-icon-width="32" data-tchmi-toggle-group="origin">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiToggleButton_2.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::eOrigin%/pp%",
        "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
          "value": 3
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "%pp%stElement::eOrigin%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%stElement::eOrigin%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
                  "value": 3
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_2::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "Symbol",
                  "symbolExpression": "%i%col_green%/i%"
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_2::ToggleState%/ctrl%",
                "valueType": "tchmi:framework#/definitions/ToggleState",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_2::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_2::ToggleState%/ctrl%",
                "valueType": "tchmi:framework#/definitions/ToggleState",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Normal"
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>
<div id="TcHmiToggleButton_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="70" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/origin_top_right-24px.svg" data-tchmi-icon-width="32" data-tchmi-toggle-group="origin">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiToggleButton_3.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::eOrigin%/pp%",
        "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
          "value": 2
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "%pp%stElement::eOrigin%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%stElement::eOrigin%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
                  "value": 2
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_3::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "Symbol",
                  "symbolExpression": "%i%col_green%/i%"
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_3::ToggleState%/ctrl%",
                "valueType": "tchmi:framework#/definitions/ToggleState",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_3::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_3::ToggleState%/ctrl%",
                "valueType": "tchmi:framework#/definitions/ToggleState",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Normal"
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div id="TcHmiToggleButton" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="130" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/origin_bottom_left-24px.svg" data-tchmi-icon-width="32" data-tchmi-toggle-group="origin">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiToggleButton.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::eOrigin%/pp%",
        "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
          "value": 1
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "%pp%stElement::eOrigin%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%stElement::eOrigin%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
                  "value": 1
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "Symbol",
                  "symbolExpression": "%i%col_green%/i%"
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton::ToggleState%/ctrl%",
                "valueType": "tchmi:framework#/definitions/ToggleState",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton::ToggleState%/ctrl%",
                "valueType": "tchmi:framework#/definitions/ToggleState",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Normal"
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div id="TcHmiToggleButton_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="190" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/origin_bottom_right-24px.svg" data-tchmi-icon-width="32" data-tchmi-toggle-group="origin">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiToggleButton_1.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::eOrigin%/pp%",
        "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
          "value": 0
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "%pp%stElement::eOrigin%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%stElement::eOrigin%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/PLC1.E_ElementOrigin",
                  "value": 0
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_1::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "Symbol",
                  "symbolExpression": "%i%col_green%/i%"
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_1::ToggleState%/ctrl%",
                "valueType": "tchmi:framework#/definitions/ToggleState",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_1::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_1::ToggleState%/ctrl%",
                "valueType": "tchmi:framework#/definitions/ToggleState",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Normal"
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div id="TcHmiToggleButton_4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="320" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/baseline-format_align_center-24px.svg" data-tchmi-icon-width="32">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiToggleButton_4.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::bCentering%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%stElement::bCentering%/pp%"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "%pp%stElement::bCentering%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%stElement::bCentering%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_4::ToggleState%/ctrl%",
                "valueType": "tchmi:framework#/definitions/ToggleState",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_4::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "Symbol",
                  "symbolExpression": "%i%col_green%/i%"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_4::ToggleState%/ctrl%",
                "valueType": "tchmi:framework#/definitions/ToggleState",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Normal"
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiToggleButton_4::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>
<div id="Element_CountY_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-textblock="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="%l%X_Pos%/l%" data-tchmi-top="70" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Right" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="18">

    </div>

<div id="Element_CountY_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-textblock="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="%l%Y_Pos%/l%" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Right" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="18" data-tchmi-is-enabled="%f%!%pp%stElement::bMirroring%/pp%%/f%">

    </div>












<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "None",
  "bottom": "None"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 0,
  "bottom": 0,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>



<script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
{
  "color": "rgba(210, 210, 210, 1)"
}
</script>






<div id="TcHmiButton_47" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="121" data-tchmi-left-unit="px" data-tchmi-top="70" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/baseline-remove-24px.svg" data-tchmi-icon-width="32" data-tchmi-icon-height="32">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_47.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "Decrement",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::fX_Pos%/pp%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": 0.0
          },
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::fDistanceX%/pp%"
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
</div>

<div id="TcHmiButton_48" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="321" data-tchmi-left-unit="px" data-tchmi-top="70" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/baseline-add-24px.svg" data-tchmi-icon-width="32" data-tchmi-icon-height="32">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_48.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "Increment",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::fX_Pos%/pp%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": null
          },
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::fDistanceX%/pp%"
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
</div>

<div id="TcHmiButton_49" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="121" data-tchmi-left-unit="px" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/baseline-remove-24px.svg" data-tchmi-icon-width="32" data-tchmi-icon-height="32" data-tchmi-is-enabled="%f%!%pp%stElement::bMirroring%/pp%%/f%">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_49.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "Decrement",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::fY_Pos%/pp%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": 0.0
          },
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::fDistanceY%/pp%"
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
</div>

<div id="TcHmiButton_50" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="321" data-tchmi-left-unit="px" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/baseline-add-24px.svg" data-tchmi-icon-width="32" data-tchmi-icon-height="32" data-tchmi-is-enabled="%f%!%pp%stElement::bMirroring%/pp%%/f%">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_50.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "Increment",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::fY_Pos%/pp%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": null
          },
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::fDistanceY%/pp%"
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
</div>

<div id="Element_title_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-textblock="" data-tchmi-height="40" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="%l%origin%/l%" data-tchmi-top="180" data-tchmi-top-unit="px" data-tchmi-width="360" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="18">

    </div>

</div>

<div id="TcHmiContainer_1" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height="200" data-tchmi-height-unit="px" data-tchmi-left="380" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="490" data-tchmi-width-unit="px" data-tchmi-is-enabled="%pp%stElement::bActive%/pp%"><div id="Element_title_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-textblock="" data-tchmi-height="40" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="%l%repeat%/l%" data-tchmi-top="180" data-tchmi-top-unit="px" data-tchmi-width="469" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="18">

    </div>
<div id="Element_title_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-textblock="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="%l%count%/l%" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="310" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="18">

    </div>
<div id="Element_title_4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-textblock="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="330" data-tchmi-left-unit="px" data-tchmi-text="%l%distance%/l%" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="18">

    </div>



<div id="Element_CountX_var_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextbox" data-tchmi-textbox="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="120" data-tchmi-left-unit="px" data-tchmi-text="%f%GaugeValueFormatter(%pp%stElement::nCountX%/pp%,0).toString().replace(&quot;.&quot;, &quot;,&quot;)%/f%" data-tchmi-top="70" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-font-size="18" data-tchmi-auto-focus-out="True" data-tchmi-is-enabled="True">
        <script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}</script>


        <script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "Element_CountX_var_2.onUserInteractionFinished",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%Element_CountX_var_2::Text%/ctrl%",
        "valueType": "tchmi:general#/definitions/String",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "%ctrl%Element_CountX_var_2::Text%/ctrl%.replace(',','.')"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::nCountX%/pp%",
        "valueType": "tchmi:general#/definitions/INT",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "GaugeValueFormatter(%ctrl%Element_CountX_var_2::Text%/ctrl%, 0)"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
    </div>
<div id="Element_CountY_var_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextbox" data-tchmi-textbox="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="120" data-tchmi-left-unit="px" data-tchmi-text="%f%GaugeValueFormatter(%pp%stElement::nCountY%/pp%,0).toString().replace(&quot;.&quot;, &quot;,&quot;)%/f%" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-font-size="18" data-tchmi-auto-focus-out="True">
        <script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}</script>


        <script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "Element_CountY_var_2.onUserInteractionFinished",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%Element_CountY_var_2::Text%/ctrl%",
        "valueType": "tchmi:general#/definitions/String",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "%ctrl%Element_CountY_var_2::Text%/ctrl%.replace(',','.')"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::nCountY%/pp%",
        "valueType": "tchmi:general#/definitions/UINT",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "GaugeValueFormatter(%ctrl%Element_CountY_var_2::Text%/ctrl%, 0)"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
    </div>

<div id="Element_DistanceX_var_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextbox" data-tchmi-textbox="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="330" data-tchmi-left-unit="px" data-tchmi-text="%f%GaugeValueFormatter(%pp%stElement::fDistanceX%/pp%, %i%maxDecimals%/i%).toString().replace(&quot;.&quot;, &quot;,&quot;)%/f%" data-tchmi-top="70" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-font-size="18" data-tchmi-is-enabled="True" data-tchmi-auto-focus-out="True">
        <script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}</script>


        <script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "Element_DistanceX_var_2.onUserInteractionFinished",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%Element_DistanceX_var_2::Text%/ctrl%",
        "valueType": "tchmi:general#/definitions/String",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "%ctrl%Element_DistanceX_var_2::Text%/ctrl%.replace(',','.')"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::fDistanceX%/pp%",
        "valueType": "tchmi:general#/definitions/REAL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "GaugeValueFormatter(%ctrl%Element_DistanceX_var_2::Text%/ctrl%, %i%maxDecimals%/i%)"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
    </div>

<div id="Element_DistanceY_var_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextbox" data-tchmi-textbox="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="330" data-tchmi-left-unit="px" data-tchmi-text="%f%GaugeValueFormatter(%pp%stElement::fDistanceY%/pp%,%i%maxDecimals%/i%).toString().replace(&quot;.&quot;, &quot;,&quot;)%/f%" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-font-size="18" data-tchmi-is-enabled="True" data-tchmi-auto-focus-out="True">
        <script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}</script>


        <script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "Element_DistanceY_var_2.onUserInteractionFinished",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%Element_DistanceY_var_2::Text%/ctrl%",
        "valueType": "tchmi:general#/definitions/String",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "%ctrl%Element_DistanceY_var_2::Text%/ctrl%.replace(',','.')"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%stElement::fDistanceY%/pp%",
        "valueType": "tchmi:general#/definitions/REAL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "GaugeValueFormatter(%ctrl%Element_DistanceY_var_2::Text%/ctrl%, %i%maxDecimals%/i%)"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
    </div>

<div id="Element_DistanceX_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-textblock="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="X" data-tchmi-top="70" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Right" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="18">

    </div>

<div id="Element_DistanceX_4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-textblock="" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="Y" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Right" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="18">

    </div>






<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 0,
  "bottom": 0,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "None",
  "bottom": "None"
}
</script>

















<script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
{
  "color": "rgba(210, 210, 210, 1)"
}
</script>
<div id="TcHmiButton_51" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="70" data-tchmi-left-unit="px" data-tchmi-top="70" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/baseline-remove-24px.svg" data-tchmi-icon-width="32" data-tchmi-icon-height="32">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_51.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "Decrement",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::nCountX%/pp%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": 0.0
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": 1.0
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
</div>

<div id="TcHmiButton_52" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="270" data-tchmi-left-unit="px" data-tchmi-top="70" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/baseline-add-24px.svg" data-tchmi-icon-width="32" data-tchmi-icon-height="32">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_52.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "Increment",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::nCountX%/pp%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": null
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": 1.0
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
</div>

<div id="TcHmiButton_53" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="70" data-tchmi-left-unit="px" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/baseline-remove-24px.svg" data-tchmi-icon-width="32" data-tchmi-icon-height="32">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_53.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "Decrement",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::nCountY%/pp%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": 0.0
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": 1.0
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
</div>

<div id="TcHmiButton_54" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="270" data-tchmi-left-unit="px" data-tchmi-top="130" data-tchmi-top-unit="px" data-tchmi-width="50" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-icon="Images/Icons/baseline-add-24px.svg" data-tchmi-icon-width="32" data-tchmi-icon-height="32">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiButton_54.onPressed",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "Increment",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%pp%stElement::nCountY%/pp%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": null
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/Number",
            "value": 1.0
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%onValueChanged%/pp%",
        "valueType": "tchmi:general#/definitions/BOOL",
        "value": {
          "objectType": "FunctionExpression",
          "functionExpression": "!%pp%onValueChanged%/pp%"
        },
        "asyncWait": true
      }
    ]
  }
]</script>
</div>

</div>

</div>